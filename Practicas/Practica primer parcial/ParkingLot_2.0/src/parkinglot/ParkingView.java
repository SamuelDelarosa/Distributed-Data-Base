/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package parkinglot;

import static java.lang.Thread.sleep;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.jvnet.substance.SubstanceLookAndFeel;
import org.jvnet.substance.button.StandardButtonShaper;
import org.jvnet.substance.utils.SubstanceConstants;
import org.jvnet.substance.watermark.SubstanceImageWatermark;
import proyecto_base_de_datos.Clientes.*;
import proyecto_base_de_datos.Conector;

/**
 *
 * @author samue
 */
public class ParkingView extends javax.swing.JFrame {

    /**
     * Creates new form ParkingView
     */
    public ParkingView() {
        initComponents();
        this.setLayout(null);
        initArray();
        setClock();
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        this.setTitle("Vista de Usuario");
        JFrame.setDefaultLookAndFeelDecorated(true);
        SubstanceLookAndFeel.setSkin("org.jvnet.substance.skin.RavenGraphiteGlassSkin");
        //SubstanceLookAndFeel.setCurrentTheme("org.jvnet.substance.theme.SubstanceEbonyTheme");

        SubstanceLookAndFeel.setCurrentWatermark(new SubstanceImageWatermark("src\\Imagenes\\llantaG_1.png"));
        SubstanceLookAndFeel.setImageWatermarkOpacity(new Float(0.1));
        this.Confirm.putClientProperty(SubstanceLookAndFeel.BUTTON_SHAPER_PROPERTY, new StandardButtonShaper());
        //this.Confirm.putClientProperty(SubstanceLookAndFeel.BUTTON_SIDE_PROPERTY, SubstanceConstants.Side.BOTTOM);
        //this.Confirm.putClientProperty(SubstanceLookAndFeel.BUTTON_OPEN_SIDE_PROPERTY, SubstanceConstants.Side.BOTTOM);
    }

    private void setClock() {
        this.add((new clock(1030, 100, "labelClock")).getLbl());
    }

    private void initArray() {
        int id = 1;
        arr = new ArrayList<>();
        int i;
        for (i = 0; i != 20; i++) {
            arr.add(new ArrLabelAndChecks(20 + (i * 50), 20, "A" + i, false, id + i));
            this.add(arr.get(i).getCmb());
            this.add(arr.get(i).getLbl());
        }
        for (i = 20; i != 40; i++) {
            arr.add(new ArrLabelAndChecks(20 + ((i - 20) * 50), 100, "B" + (i - 20), true, id + i));
            this.add(arr.get(i).getCmb());
            this.add(arr.get(i).getLbl());
        }
        for (i = 40; i != 60; i++) {
            arr.add(new ArrLabelAndChecks(20 + ((i - 40) * 50), 250, "C" + (i - 40), false, id + i));
            this.add(arr.get(i).getCmb());
            this.add(arr.get(i).getLbl());
        }
        for (i = 60; i != 80; i++) {
            arr.add(new ArrLabelAndChecks(20 + ((i - 60) * 50), 330, "D" + (i - 60), true, id + i));
            this.add(arr.get(i).getCmb());
            this.add(arr.get(i).getLbl());
        }
        for (i = 80; i != 100; i++) {
            arr.add(new ArrLabelAndChecks(20 + ((i - 80) * 50), 480, "E" + (i - 80), false, id + i));
            this.add(arr.get(i).getCmb());
            this.add(arr.get(i).getLbl());
        }
        for (i = 100; i != 120; i++) {
            arr.add(new ArrLabelAndChecks(20 + ((i - 100) * 50), 560, "F" + (i - 100), true, id + i));
            this.add(arr.get(i).getCmb());
            this.add(arr.get(i).getLbl());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        clock = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Confirm = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        jMenu3.setText("jMenu3");

        jMenuItem1.setText("jMenuItem1");

        jMenuItem2.setText("jMenuItem2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        setPreferredSize(new java.awt.Dimension(1200, 700));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lane_lines.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, -1, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lane_lines.png"))); // NOI18N
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));
        getContentPane().add(clock, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 110, 130, 50));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lf.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 498, -1, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lf.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, -1, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/lf.png"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 268, -1, -1));

        Confirm.setFont(new java.awt.Font("Franklin Gothic Medium", 1, 14)); // NOI18N
        Confirm.setText("Confirmar Lugar");
        Confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmActionPerformed(evt);
            }
        });
        getContentPane().add(Confirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 300, 170, 80));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/back.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 570, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void ConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmActionPerformed
        // TODO add your handling code here:
        ArrayList placesView = new ArrayList();
        ArrayList placesDB = new ArrayList();
        int idCajonNuevo;
        int i, selecInView, selecInDB;
        selecInView = 0;
        selecInDB = 0;
        for (i = 0; i < 120; i++) {//Obtener el NÚMERO de lugares seleccionados en la vista
            if (arr.get(i).getCmb().isSelected()) {
                selecInView += 1;
                placesView.add(arr.get(i).getId());
            }
        }
        System.out.println("Lugares en Vista: " + placesView);
        System.out.println("Lugares en Vista: " + selecInView);
        //System.out.println(arr.get(28).getId());//****Nota, los ID de la vista y los de la BD están desfasados por 1 unidad****
        selecInDB = Integer.parseInt(con.getValor("select count(*) idUb from cajon where disponible=1;")); //Obtener el NÚMERO de lugares usados en la BD
        System.out.println("Lugares en BD: " + selecInDB);
        for (i = 0; i < 120; i++) { //Obtener el ID de los lugares usados en la BD
            if (con.ExisteEnBD("select idUb from cajon where disponible=1 and idUb=" + i + " ;") == true) {
                placesDB.add(i);
            }
        }
        System.out.println("Lugares en BD: " + placesDB);
        ArrayList diferencia = new ArrayList(placesView);
        diferencia.removeAll(placesDB);
        System.out.println("Lugares en Vista pero no en BD: " + diferencia);
        if (diferencia.size() >= 2 ) { //Si se ha seleccionado más de un lugar, enviar adventencia al usuario
            JOptionPane.showMessageDialog(null, "Porfavor, seleccione un lugar únicamente");
        }else if(diferencia.isEmpty()){
            JOptionPane.showMessageDialog(null, "No se seleccionó un lugar o el lugar ya fue elegido por otro usuario");
        }else {
            idCajonNuevo = (int) diferencia.get(0); //Obtener el primer (y en teoría único) elemento de la diferencia entre los arreglos seleccionados
            String passID = new String();
            System.out.println(idCajonNuevo);
            con.EjecutarActualizacion("call updateDispo( " + idCajonNuevo + ");");
            arr.get(idCajonNuevo - 1).aumentaContador();
            con.EjecutarActualizacion("update cajon set contador= " + arr.get(idCajonNuevo - 1).getContador() + " where idUb=" + idCajonNuevo + ";");
            JOptionPane.showMessageDialog(null, "Lugar reservado con éxito!!! \n Presione 'Aceptar' para generar su boleto");
            System.out.println("ID pasado" + idCajonNuevo);
            passID = arr.get(idCajonNuevo - 1).getName();
            System.out.println(passID);
            setStats(idCajonNuevo);
            Genera_Boleto opc2 = new Genera_Boleto(this, true, passID, idCajonNuevo);
            opc2.setVisible(true);
            dispose();

        }

    }//GEN-LAST:event_ConfirmActionPerformed

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        // TODO add your handling code here:
        Uso newUso=new Uso();
        newUso.setVisible(true);
        dispose();
    }//GEN-LAST:event_jLabel1MousePressed

    public void setStats(int ID) {
        Time tiempo = new Time();
        String hora, fecha;
        int idUs;
        hora = tiempo.getHora();
        fecha = tiempo.getDia();
        idUs = (int) Math.floor(Math.random() * (9999 - 1000 + 1) + 1000);
        con.EjecutarActualizacion("call setRelacionTiempo( " + idUs + " , " + ID + " , " + hora + " , " + fecha + ");");
    }


    public ArrayList<ArrLabelAndChecks> getArray() {
        return arr;
    }

    public boolean lastCheck(int idUb) {
        String disponibilidad;
        Conector nCon = new Conector();
        disponibilidad = nCon.getValor("select disponible from cajon where idUb=" + idUb + ";");
        return disponibilidad.equals("1");
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Confirm;
    private javax.swing.JLabel clock;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    // End of variables declaration//GEN-END:variables
    private ArrayList<ArrLabelAndChecks> arr;
    Conector con = new Conector();
}
